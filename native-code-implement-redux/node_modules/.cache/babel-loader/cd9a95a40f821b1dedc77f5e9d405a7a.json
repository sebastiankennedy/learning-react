{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/Code/Study/learning-react/redux-demo/src/App.js\";\nimport React, { useState, useCallback, useRef } from 'react';\nimport './App.css';\n\nfunction Control(props) {\n  const {\n    addTodo\n  } = props;\n  const inputRef = useRef();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newText = inputRef.current.value.trim();\n\n    if (!newText) {\n      return;\n    }\n\n    addTodo({\n      id: Date.now(),\n      text: newText,\n      complete: false\n    });\n    inputRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"todos\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"new-todo\",\n    placeholder: \"Add Todo\",\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Todos(props) {\n  const {\n    todos,\n    toggleTodo,\n    removeTodo\n  } = props;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, todos.map(todo => {\n    return /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo.id,\n      todo: todo,\n      toggleTodo: toggleTodo,\n      removeTodo: removeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    });\n  }));\n}\n\nfunction TodoItem(props) {\n  const {\n    todo: {\n      id,\n      text,\n      complete\n    },\n    toggleTodo,\n    removeTodo\n  } = props;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const addTodo = useCallback(todo => {\n    setTodos(todos => [...todos, todo]);\n  }, []);\n  const removeTodo = useCallback(id => {\n    setTodos(todos => todos.filter(todo => {\n      return todo.id !== id;\n    }));\n  }, []);\n  const toggleTodo = useCallback(id => {\n    setTodos(todos => todos.map(todo => {\n      return todo.id === id ? { ...todo,\n        complete: !todo.complete\n      } : todo;\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todos, {\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebastian/Code/Study/learning-react/redux-demo/src/App.js"],"names":["React","useState","useCallback","useRef","Control","props","addTodo","inputRef","onSubmit","e","preventDefault","newText","current","value","trim","id","Date","now","text","complete","Todos","todos","toggleTodo","removeTodo","map","todo","TodoItem","App","setTodos","filter"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport './App.css';\n\nfunction Control(props) {\n  const { addTodo } = props;\n  const inputRef = useRef();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newText = inputRef.current.value.trim();\n\n    if (!newText) {\n      return;\n    }\n\n    addTodo({\n      id: Date.now(),\n      text: newText,\n      complete: false\n    })\n\n    inputRef.current.value = ''\n  }\n\n  return (\n    <div className=\"control\">\n      <h1>\n        todos\n      </h1>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"Add Todo\"\n          ref={inputRef}\n        />\n      </form>\n    </div>\n  )\n}\n\nfunction Todos(props) {\n  const { todos, toggleTodo, removeTodo } = props\n\n  return (\n    <ul>\n      {\n        todos.map(todo => {\n          return (<TodoItem\n            key={todo.id}\n            todo={todo}\n            toggleTodo={toggleTodo}\n            removeTodo={removeTodo}\n          />)\n        })\n      }\n    </ul>\n  )\n}\n\nfunction TodoItem(props) {\n  const { todo: {\n    id,\n    text,\n    complete\n  },\n    toggleTodo,\n    removeTodo\n  } = props\n\n  return (\n    <li className=\"todo-item\">\n      <input />\n    </li>\n  )\n}\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTodo = useCallback((todo) => {\n    setTodos(todos => [...todos, todo])\n  }, [])\n\n  const removeTodo = useCallback((id) => {\n    setTodos(todos => todos.filter(todo => {\n      return todo.id !== id\n    }))\n  }, [])\n\n  const toggleTodo = useCallback((id) => {\n    setTodos(todos => todos.map(todo => {\n      return todo.id === id\n        ? {\n          ...todo,\n          complete: !todo.complete\n        }\n        : todo\n    }))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Control addTodo={addTodo} />\n      <Todos removeTodo={removeTodo} toggleTodo={toggleTodo} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}